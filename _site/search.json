[
  {
    "objectID": "projects/about.html",
    "href": "projects/about.html",
    "title": "Data Wrangling for Microglia Complexity Analysis",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\n07-28-2025\n\n\nData Wrangling for Sholl Analysis\n\n\nClara L. Hibbs\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/0.final_project_copy.html",
    "href": "projects/0.final_project_copy.html",
    "title": "Data Wrangling for Sholl Analysis",
    "section": "",
    "text": "Microglia are the resident immune cells of the central nervous system. These cells have several important functions related to immune surveillance and response which work to maintain brain homeostasis and protect from disease.\n\nphagocytosis of dead cells, cellular debris, and protein aggregates\ninflammatory response through secretion of pro- or anti-inflammatory cytokines\n\nAdditionally, microglia regulate neurogenesis and synaptic plasticity through their phagocytic and secretory actions.\n\nIn healthy tissue, microglia exist in a “resting” state. This name is a bit of a misnomer as microglia are never resting. Homeostatic microglia are extremely dynamic cells which are constantly moving their processes in order to monitor the brain microenvironment.\nAlso contributing to their dynamic nature, is their ability to perform phenotypic switching in response to environmental stimuli. In a healthy brain, a majority of microglia are in a resting morphology which is defined by a ramified appearance. Upon encountering damage- or pathogen-associated molecular patterns, microglia become reactive and retract their processes to adopt an amoeboid morphology."
  },
  {
    "objectID": "projects/0.final_project_copy.html#load-packages",
    "href": "projects/0.final_project_copy.html#load-packages",
    "title": "Data Wrangling for Sholl Analysis",
    "section": "Load Packages",
    "text": "Load Packages\n\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(here)"
  },
  {
    "objectID": "projects/0.final_project_copy.html#data-import",
    "href": "projects/0.final_project_copy.html#data-import",
    "title": "Data Wrangling for Sholl Analysis",
    "section": "Data Import",
    "text": "Data Import\nData import is going to be a bit more complicated than usual. The Imaris software exports Sholl data in individual csv files (see below).\n\n\n# A tibble: 6 × 7\n  `Filament No. Sholl Intersections` Unit  Category Radius  Time        ID ...7 \n                               &lt;dbl&gt; &lt;lgl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;lgl&gt;\n1                                  0 NA    Filament      0     1 100000000 NA   \n2                                  0 NA    Filament      1     1 100000000 NA   \n3                                  0 NA    Filament      2     1 100000000 NA   \n4                                  1 NA    Filament      3     1 100000000 NA   \n5                                  9 NA    Filament      4     1 100000000 NA   \n6                                 14 NA    Filament      5     1 100000000 NA   \n\n\nThis table is from one output file. Each cell that is analyzed one of these files. I have up to 30 cells per animal resulting in an approximate total of 500 cells meaning I have 500 csv files to compare.\nTo get around importing each of those files separately, I have written some code loops. A loop is a statement that allows for a block of code to be executed repeatedly. I have written 2 loops for this data analysis which I will explain below.\nFor now, I have set 2 file paths. The input path leads to a folder that contains the raw output folders from Imaris. The output path leads to the folder that will store the output for the rest of the script.\n\n# set path to input files\ninput_path &lt;- \"data/240521_MG/21-32-07/Imaris\"\n\n# set path to output folder\noutput_path &lt;- \"data/Sholl_trim\"\n\nImaris saves the output files, named *Detailed.csv, within a statistics folder for each cell analyzed. To speed up the process of importing each separate file, I am using the list.files command. This base R command lists out all of the files located in a specific directory. By setting the path as my input path, I told R to look in the folder that contains subdirectories with the *Detailed.csv files. I then set the pattern to recognize only the *Detailed.csv files. Setting recursive as true allows R to open the subdirectories within the Imaris folder. Setting full.names to true means that the entire relative file path will be listed instead of just the file name.\n\n# open subfolders and find the *Detailed.csv files\ninput_files &lt;- list.files(\n  path = input_path,\n  pattern = \"Detailed\\\\.csv$\",\n  recursive = TRUE,\n  full.names = TRUE)\n\nThere is no output from this command as it is saved to input_files."
  },
  {
    "objectID": "projects/0.final_project_copy.html#data-transformation",
    "href": "projects/0.final_project_copy.html#data-transformation",
    "title": "Data Wrangling for Sholl Analysis",
    "section": "Data Transformation",
    "text": "Data Transformation\nNow that all of the input files have been located, we can begin to remove unnecessary columns. Let’s have a look at the data file again.\n\n\n\n\n\nYou’ll notice that the data does not begin until row 5 with column headers in row 4. Additionally, the data necessary for Sholl analysis are located in the “Filament No. Sholl Intersections” and “Radius” columns. The four other columns do not provide helpful data.\nBefore we combine all of the statistics files together, it would be smart to organize the individual files. I have written a loop that will do exactly that.\nFirst of all, the loop with repeat for each file listed by input_files. It will start with the first file and continue down the list until it completes all 17 files.\nThe first step of the loop is to read in the csv file. Using skip = 4 means that the first 4 rows of each file will be skipped. This removes the 4 unnecessary rows of headers. Since the headers were removed, col_names is set to false.\nIn the next step, the data file is updated to only include the two columns containing Sholl data using select, and these columns are given headers using rename. Additionally, mutate is used to add a new column to the data file which includes the file path.\nFinally, the data file is given a new name and saved as a csv to the output file. Let’s walk backwards through the code. The file name is extracted from the full file path using basename. The file extension (.csv) is then removed using file_path_sans_ext. The paste0 function allows for “.trim.csv” to be added to the end of the file name. The newly trimmed data file is then saved to the output folder with the new name.\n\nfor (file in input_files) {\n  data &lt;- read_csv(file, skip = 4, col_names = FALSE)\n  \n  trimmed &lt;- data |&gt;\n    mutate(filename = file) |&gt;\n    select(filename, X1, X4) |&gt;\n    rename(intersections = X1,\n           radius = X4)\n  \n  output_file &lt;- file.path(output_path, paste0(tools::file_path_sans_ext(basename(file)), \".trim.csv\"))\n  write_csv(trimmed, output_file)\n}"
  },
  {
    "objectID": "projects/0.final_project_copy.html#data-combination",
    "href": "projects/0.final_project_copy.html#data-combination",
    "title": "Data Wrangling for Sholl Analysis",
    "section": "Data Combination",
    "text": "Data Combination\nNow we have a folder with several different csv files containing Sholl data for each analyzed cell. The next step is to combine these individual data files into one.\nFirst, we once again use list.files to create a list that contains all trimmed data files. The first file is then read into R and removes the rows that contain “filename” which is the header row. This row is removed to prevent repeated header columns in the final data frame. The remaining files are edited and eventually combined with a loop. The first file is excluded from the loop in order to create a data frame that the remaining data can be added to.\nThe loop starts the same as the previous code for the first file. Then the new data frame is added to the existing data frame containing the first file. The loop repeats until all of the files have been added to the combined data frame.\nThe column headers are then added and the combined file is written.\n\nall_files &lt;- list.files(\"data/Sholl_trim\", pattern = \"\\\\.csv$\", full.names = TRUE)\n\ndf &lt;- read.csv(all_files[1], header = FALSE)\ndf &lt;- df[df$V1 !=\"filename\", ]\n\nfor (i in 2:length(all_files)) {\n  tmp &lt;- read.csv(all_files[i], header = FALSE)\n  tmp &lt;- tmp[tmp$V1 !=\"filename\", ]\n  df &lt;- rbind(df, tmp)\n  print(paste(\"Processed file\", i, \"of\", length(all_files)))\n}\n\n[1] \"Processed file 2 of 17\"\n[1] \"Processed file 3 of 17\"\n[1] \"Processed file 4 of 17\"\n[1] \"Processed file 5 of 17\"\n[1] \"Processed file 6 of 17\"\n[1] \"Processed file 7 of 17\"\n[1] \"Processed file 8 of 17\"\n[1] \"Processed file 9 of 17\"\n[1] \"Processed file 10 of 17\"\n[1] \"Processed file 11 of 17\"\n[1] \"Processed file 12 of 17\"\n[1] \"Processed file 13 of 17\"\n[1] \"Processed file 14 of 17\"\n[1] \"Processed file 15 of 17\"\n[1] \"Processed file 16 of 17\"\n[1] \"Processed file 17 of 17\"\n\ncolnames(df) &lt;- c(\"filename\", \"intersections\", \"radius\")\n\nwrite.csv(df, \"data/Sholl.csv\", row.names = FALSE)\n\nTaking a peek at the data frame shows that there are three columns. One contains the file path, and therefore the sample ID. The second and third contain the Sholl data.\n\nglimpse(df)\n\nRows: 735\nColumns: 3\n$ filename      &lt;chr&gt; \"data/240521_MG/21-32-07/Imaris/21-32-07_100x_CA1_1_Stat…\n$ intersections &lt;chr&gt; \"0\", \"0\", \"0\", \"1\", \"9\", \"14\", \"16\", \"17\", \"23\", \"27\", \"…\n$ radius        &lt;chr&gt; \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", …"
  },
  {
    "objectID": "projects/0.final_project_copy.html#text-to-column",
    "href": "projects/0.final_project_copy.html#text-to-column",
    "title": "Data Wrangling for Sholl Analysis",
    "section": "Text to Column",
    "text": "Text to Column\nAs mentioned, each sample ID is currently stored in a file path. Obviously, this is not ideal. The file path can be separated into individual columns to isolate important sample information.\nTo preserve the integrity of the original file path column, the column is duplicated. The text in the duplicated column can be turned into individual columns using separate_wider_delim.\n\ndf$filename_copy &lt;- df$filename\n\ndata &lt;- separate_wider_delim(df, \n                             cols = filename_copy, \n                             names = c(\"folder1\", \"folder2\", \"id\", \"folder5\", \"folder6\", \"Detailed\"), \n                             delim = \"/\")\nglimpse(data)\n\nRows: 735\nColumns: 9\n$ filename      &lt;chr&gt; \"data/240521_MG/21-32-07/Imaris/21-32-07_100x_CA1_1_Stat…\n$ intersections &lt;chr&gt; \"0\", \"0\", \"0\", \"1\", \"9\", \"14\", \"16\", \"17\", \"23\", \"27\", \"…\n$ radius        &lt;chr&gt; \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", …\n$ folder1       &lt;chr&gt; \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", …\n$ folder2       &lt;chr&gt; \"240521_MG\", \"240521_MG\", \"240521_MG\", \"240521_MG\", \"240…\n$ id            &lt;chr&gt; \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-0…\n$ folder5       &lt;chr&gt; \"Imaris\", \"Imaris\", \"Imaris\", \"Imaris\", \"Imaris\", \"Imari…\n$ folder6       &lt;chr&gt; \"21-32-07_100x_CA1_1_Statistics\", \"21-32-07_100x_CA1_1_S…\n$ Detailed      &lt;chr&gt; \"21-32-07_100x_CA1_c1_Detailed.csv\", \"21-32-07_100x_CA1_…\n\n\nThe data frame now contains six new columns. However, four of these columns contain unnecessary information and can be removed from the data frame. Using select, the important columns were isolated in the data frame.\n\ndata &lt;- data |&gt;\n  select(id, filename, intersections, radius, Detailed)\nhead(data)\n\n# A tibble: 6 × 5\n  id       filename                                intersections radius Detailed\n  &lt;chr&gt;    &lt;chr&gt;                                   &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt;   \n1 21-32-07 data/240521_MG/21-32-07/Imaris/21-32-0… 0             0      21-32-0…\n2 21-32-07 data/240521_MG/21-32-07/Imaris/21-32-0… 0             1      21-32-0…\n3 21-32-07 data/240521_MG/21-32-07/Imaris/21-32-0… 0             2      21-32-0…\n4 21-32-07 data/240521_MG/21-32-07/Imaris/21-32-0… 1             3      21-32-0…\n5 21-32-07 data/240521_MG/21-32-07/Imaris/21-32-0… 9             4      21-32-0…\n6 21-32-07 data/240521_MG/21-32-07/Imaris/21-32-0… 14            5      21-32-0…"
  },
  {
    "objectID": "projects/0.final_project_copy.html#text-to-column-again",
    "href": "projects/0.final_project_copy.html#text-to-column-again",
    "title": "Data Wrangling for Sholl Analysis",
    "section": "Text to Column… Again",
    "text": "Text to Column… Again\nThe data frame now contains the sample ID, but the newly dubbed Detailed column still contains more crucial information. This information includes the subregion in which the cell was located and cell number. Text to columns can be used again to separate this information.\n\ndata &lt;- separate_wider_delim(data,\n                             cols = Detailed,\n                             names = c(\"x1\", \"x2\", \"subregion\", \"cell\", \"x3\"),\n                             delim = \"_\")\nglimpse(data)\n\nRows: 735\nColumns: 9\n$ id            &lt;chr&gt; \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-0…\n$ filename      &lt;chr&gt; \"data/240521_MG/21-32-07/Imaris/21-32-07_100x_CA1_1_Stat…\n$ intersections &lt;chr&gt; \"0\", \"0\", \"0\", \"1\", \"9\", \"14\", \"16\", \"17\", \"23\", \"27\", \"…\n$ radius        &lt;chr&gt; \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", …\n$ x1            &lt;chr&gt; \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-0…\n$ x2            &lt;chr&gt; \"100x\", \"100x\", \"100x\", \"100x\", \"100x\", \"100x\", \"100x\", …\n$ subregion     &lt;chr&gt; \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", …\n$ cell          &lt;chr&gt; \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c…\n$ x3            &lt;chr&gt; \"Detailed.csv\", \"Detailed.csv\", \"Detailed.csv\", \"Detaile…\n\n\nOnce again, the necessary columns can be isolated from the unnecessary ones using select. Additionally, more sample information can be added to the data frame. Based on the subregion isolated from the filename, the region can be inferred.\nTRUE ~ NA_character_ ensures that any data that does not match either of the presented cases is labeled as NA.\n\ndata &lt;- data |&gt; select(id, subregion, cell, filename, intersections, radius) |&gt;\n  rename(CellID = filename) |&gt;\n  mutate(section = str_extract(subregion, \"\\\\d\"),\n         region_prefix = str_extract(subregion, \"[A-Z]+\"),\n         region = case_when(\n           region_prefix %in% c(\"CA\", \"DG\") ~ \"HPC\",\n           region_prefix %in% c(\"DS\", \"VS\") ~ \"STR\",\n           TRUE ~ NA_character_))\nhead(data)\n\n# A tibble: 6 × 9\n  id    subregion cell  CellID intersections radius section region_prefix region\n  &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;         &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;         &lt;chr&gt; \n1 21-3… CA1       c1    data/… 0             0      1       CA            HPC   \n2 21-3… CA1       c1    data/… 0             1      1       CA            HPC   \n3 21-3… CA1       c1    data/… 0             2      1       CA            HPC   \n4 21-3… CA1       c1    data/… 1             3      1       CA            HPC   \n5 21-3… CA1       c1    data/… 9             4      1       CA            HPC   \n6 21-3… CA1       c1    data/… 14            5      1       CA            HPC   \n\n\nFor the final time, the important data is isolated from the unneeded data columns. Additionally, mutate is used to convert the “radius” and “intersections” columns from character vectors to numeric vectors.\n\ndata &lt;- data |&gt; select(id, region, subregion, section, cell, CellID, intersections, radius)\nhead(data)\n\n# A tibble: 6 × 8\n  id       region subregion section cell  CellID            intersections radius\n  &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;             &lt;chr&gt;         &lt;chr&gt; \n1 21-32-07 HPC    CA1       1       c1    data/240521_MG/2… 0             0     \n2 21-32-07 HPC    CA1       1       c1    data/240521_MG/2… 0             1     \n3 21-32-07 HPC    CA1       1       c1    data/240521_MG/2… 0             2     \n4 21-32-07 HPC    CA1       1       c1    data/240521_MG/2… 1             3     \n5 21-32-07 HPC    CA1       1       c1    data/240521_MG/2… 9             4     \n6 21-32-07 HPC    CA1       1       c1    data/240521_MG/2… 14            5     \n\ndata &lt;- data |&gt;\n  mutate(radius = as.numeric(as.character(radius))) |&gt;\n  mutate(intersections = as.numeric(as.character(intersections)))\nglimpse(data)\n\nRows: 735\nColumns: 8\n$ id            &lt;chr&gt; \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-0…\n$ region        &lt;chr&gt; \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", …\n$ subregion     &lt;chr&gt; \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", …\n$ section       &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ cell          &lt;chr&gt; \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c…\n$ CellID        &lt;chr&gt; \"data/240521_MG/21-32-07/Imaris/21-32-07_100x_CA1_1_Stat…\n$ intersections &lt;dbl&gt; 0, 0, 0, 1, 9, 14, 16, 17, 23, 27, 20, 19, 19, 15, 16, 3…\n$ radius        &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n\nwrite.csv(data, \"data/Sholl.csv\", row.names = FALSE)"
  },
  {
    "objectID": "projects/0.final_project_copy.html#metadata-time",
    "href": "projects/0.final_project_copy.html#metadata-time",
    "title": "Data Wrangling for Sholl Analysis",
    "section": "Metadata Time!",
    "text": "Metadata Time!\nWhile the data has been parsed as much as possible, data is still missing from the file. These missing factors include variables such as sex, group, and age which are needed for data comparison. This data is readily accessible in a metadata file that I previously made. This metadata file can be applied to the data frame to match the correct variables to each sample ID.\nFirst, the metadata file is read into R.\n\nmeta &lt;- read.csv(\"data/240521_MG/meta_sholl.csv\", header = TRUE, stringsAsFactors = FALSE, colClasses = \"character\")\nhead(meta)\n\n        id litter group  trt sex months  age\n1 21-32-07  21-32   CON none   F     25 aged\n\n\nMerge is used to combine the data frame with the metadata file. Merge will automatically match the “id” columns and applies the remaining metadata columns correctly.\n\ndata &lt;- merge(data, meta)\nglimpse(data)\n\nRows: 735\nColumns: 14\n$ id            &lt;chr&gt; \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-0…\n$ region        &lt;chr&gt; \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", …\n$ subregion     &lt;chr&gt; \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", …\n$ section       &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ cell          &lt;chr&gt; \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c…\n$ CellID        &lt;chr&gt; \"data/240521_MG/21-32-07/Imaris/21-32-07_100x_CA1_1_Stat…\n$ intersections &lt;dbl&gt; 0, 0, 0, 1, 9, 14, 16, 17, 23, 27, 20, 19, 19, 15, 16, 3…\n$ radius        &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ litter        &lt;chr&gt; \"21-32\", \"21-32\", \"21-32\", \"21-32\", \"21-32\", \"21-32\", \"2…\n$ group         &lt;chr&gt; \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", …\n$ trt           &lt;chr&gt; \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", …\n$ sex           &lt;chr&gt; \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"…\n$ months        &lt;chr&gt; \"25\", \"25\", \"25\", \"25\", \"25\", \"25\", \"25\", \"25\", \"25\", \"2…\n$ age           &lt;chr&gt; \"aged\", \"aged\", \"aged\", \"aged\", \"aged\", \"aged\", \"aged\", …\n\n\nThe dataset is then reorganized using relocate to place all of the metadata columns together.\n\ndata &lt;- data |&gt; relocate(9:14, .after=id)\nglimpse(data)\n\nRows: 735\nColumns: 14\n$ id            &lt;chr&gt; \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-07\", \"21-32-0…\n$ litter        &lt;chr&gt; \"21-32\", \"21-32\", \"21-32\", \"21-32\", \"21-32\", \"21-32\", \"2…\n$ group         &lt;chr&gt; \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", \"CON\", …\n$ trt           &lt;chr&gt; \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", …\n$ sex           &lt;chr&gt; \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"…\n$ months        &lt;chr&gt; \"25\", \"25\", \"25\", \"25\", \"25\", \"25\", \"25\", \"25\", \"25\", \"2…\n$ age           &lt;chr&gt; \"aged\", \"aged\", \"aged\", \"aged\", \"aged\", \"aged\", \"aged\", …\n$ region        &lt;chr&gt; \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", \"HPC\", …\n$ subregion     &lt;chr&gt; \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", \"CA1\", …\n$ section       &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"…\n$ cell          &lt;chr&gt; \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c1\", \"c…\n$ CellID        &lt;chr&gt; \"data/240521_MG/21-32-07/Imaris/21-32-07_100x_CA1_1_Stat…\n$ intersections &lt;dbl&gt; 0, 0, 0, 1, 9, 14, 16, 17, 23, 27, 20, 19, 19, 15, 16, 3…\n$ radius        &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n\n\nWe can use table to quickly examine the data.\n\ntable(data$id)\n\n\n21-32-07 \n     735 \n\ntable(data$group)\n\n\nCON \n735 \n\ntable(data$sex)\n\n\n  F \n735 \n\ntable(data$age)\n\n\naged \n 735 \n\ntable(data$subregion)\n\n\nCA1 DG1 DG2 DS1 DS2 VS1 VS2 \n110  67  72 138 154 137  57"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Pinckard J, Negri S, Huston CA, Bickel MA, Vance ML, Milan M, Hibbs CL, Budda M, Chandragiri SS, Pipkin K, Tarantini S, Conley SM. Functional ultrasound as a quantitative approach for measuring functional hyperemia in aging models. Neuroimage. 2025 Aug 1;316:121313. doi: 10.1016/j.neuroimage.2025.121313. Epub 2025 Jun 12. PMID: 40513179; PMCID: PMC12257925.\nHuston CA, Milan M, Vance ML, Bickel MA, Miller LR, Negri S, Hibbs C, Vaden H, Hayes L, Csiszar A, Ungvari Z, Yabluchanskiy A, Tarantini S, Conley SM. The effects of time restricted feeding on age-related changes in the mouse retina. Exp Gerontol. 2024 Sep;194:112510. doi: 10.1016/j.exger.2024.112510. Epub 2024 Jul 5. PMID: 38964431; PMCID: PMC11425985.\nMiller LR, Bickel MA, Tarantini S, Runion ME, Matacchiera Z, Vance ML, Hibbs C, Vaden H, Nagykaldi D, Martin T, Bullen EC, Pinckard J, Kiss T, Howard EW, Yabluchanskiy A, Conley SM. IGF1R deficiency in vascular smooth muscle cells impairs myogenic autoregulation and cognition in mice. Front Aging Neurosci. 2024 Feb 15;16:1320808. doi: 10.3389/fnagi.2024.1320808. PMID: 38425784; PMCID: PMC10902040."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Clara L. Hibbs",
    "section": "",
    "text": "I am a graduate student in the Department of Cell Biology at the University of Oklahoma Health Sciences Center. My Ph.D. project focuses on how maternal inflammation causes sex differences in onset of age-related cognitive decline due to manipulation of microglial response.\n\n\n\nMy research interests lie with investigating women’s health. My long-term career goal is to establish my own research laboratory to investigate how the molecular aspects of menopause result in increased risk for neurodegenerative diseases. I recognize the limited research in diseases that disproportionately affect women. I have decided that I wanted my research career to be focused on closing the gap in women’s health research, particularly in diseases with increased risk for women after menopause.\n\n\n\nI have expertise in cell and molecular biology, microglia, and data science including bioinformatics."
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "Clara L. Hibbs",
    "section": "",
    "text": "I am a graduate student in the Department of Cell Biology at the University of Oklahoma Health Sciences Center. My Ph.D. project focuses on how maternal inflammation causes sex differences in onset of age-related cognitive decline due to manipulation of microglial response."
  },
  {
    "objectID": "index.html#research-goals",
    "href": "index.html#research-goals",
    "title": "Clara L. Hibbs",
    "section": "",
    "text": "My research interests lie with investigating women’s health. My long-term career goal is to establish my own research laboratory to investigate how the molecular aspects of menopause result in increased risk for neurodegenerative diseases. I recognize the limited research in diseases that disproportionately affect women. I have decided that I wanted my research career to be focused on closing the gap in women’s health research, particularly in diseases with increased risk for women after menopause."
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Clara L. Hibbs",
    "section": "",
    "text": "I have expertise in cell and molecular biology, microglia, and data science including bioinformatics."
  }
]